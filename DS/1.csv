Front,Back
"📚 <b>Data Structures Fundamentals</b>","<b>🌟 Emotional Hook:</b> Did you know the first 'data structure' was the <i>library catalog system</i> in ancient Alexandria? Just like books need organization, so does your data!<br><br><b>📖 Definition:</b> Data structures are specialized formats for organizing, processing, and storing data efficiently.<br><br><b>🔍 Classifications:</b><br>• <u>Linear</u> (arrays, linked lists) vs <u>Non-linear</u> (trees, graphs)<br>• <u>Static</u> (fixed size) vs <u>Dynamic</u> (grows/shrinks)<br><br><b>🌍 Examples:</b><br>1. <i>Queue</i> at a ticket counter (linear)<br>2. <i>Family tree</i> (non-linear)<br>3. <i>Excel spreadsheet</i> (static)<br><br><b>🔮 Analogies:</b><br>1. Like different <i>toolboxes</i> for different jobs<br>2. Like <i>parking lots</i> (static) vs <i>valet parking</i> (dynamic)<br>3. Like <i>train cars</i> (linear) vs <i>spider webs</i> (non-linear)"

"🧩 <b>Arrays</b>","<b>🎯 Emotional Hook:</b> Your favorite playlist is actually an array! Each song has its index position (track number).<br><br><b>📖 Definition:</b> Contiguous memory locations storing elements of same type, with random access via indices.<br><br><b>⚙️ Operations:</b> O(1) access, O(n) search/insert/delete<br><b>➕ Pros:</b> Fast access, simple<br><b>➖ Cons:</b> Fixed size, expensive inserts<br><br><b>🌍 Examples:</b><br>1. <i>Egg carton</i> (fixed slots)<br>2. <i>Monthly calendar</i> (each day = index)<br>3. <i>Chessboard</i> (8x8 grid)<br><br><b>🔮 Analogies:</b><br>1. Like <i>apartment building</i> with unit numbers<br>2. Like <i>vending machine</i> slots<br>3. Like <i>parking garage</i> with numbered spaces"

"⛓️ <b>Linked Lists</b>","<b>💡 Emotional Hook:</b> The Hogwarts Express is a linked list! Each carriage (node) connects to the next, and you can add/remove carriages easily.<br><br><b>📖 Definition:</b> Linear collection where elements (nodes) contain data + pointer to next node.<br><br><b>🔗 Types:</b><br>• <u>Singly</u> (next pointer only)<br>• <u>Doubly</u> (next + previous)<br>• <u>Circular</u> (tail points to head)<br><br><b>🌍 Examples:</b><br>1. <i>Scavenger hunt</i> (clues point to next location)<br>2. <i>Conga line</i> (each person holds the next)<br>3. <i>Train</i> (linked carriages)<br><br><b>🔮 Analogies:</b><br>1. Like <i>treasure map</i> with 'X marks the next spot'<br>2. Like <i>friendship bracelet</i> (interlinked threads)<br>3. Like <i>domino chain</i> (knock one affects others)"

"📚 <b>Stacks (LIFO)</b>","<b>🍔 Emotional Hook:</b> Your browser's BACK button uses a stack! Each visited page gets 'pushed', hitting back 'pops' the last one.<br><br><b>📖 Definition:</b> Last-In-First-Out (LIFO) structure with push() and pop() operations.<br><br><b>⚙️ Operations:</b> O(1) for push/pop/peek<br><br><b>🌍 Examples:</b><br>1. <i>Pancake stack</i> (eat from top)<br>2. <i>Undo/Redo</i> in editors<br>3. <i>Call stack</i> in program execution<br><br><b>🔮 Analogies:</b><br>1. Like <i>PEZ dispenser</i><br>2. Like <i>mailbox</i> (last letter in = first out)<br>3. Like <i>jenga tower</i>"

"🛒 <b>Queues (FIFO)</b>","<b>🎟️ Emotional Hook:</b> Disneyland's FastPass system is a priority queue! Regular lines are regular queues.<br><br><b>📖 Definition:</b> First-In-First-Out (FIFO) structure with enqueue() and dequeue() operations.<br><br><b>⚙️ Operations:</b> O(1) for enqueue/dequeue<br><br><b>🌍 Examples:</b><br>1. <i>Printer queue</i><br>2. <i>Drive-thru line</i><br>3. <i>Ticket counter</i><br><br><b>🔮 Analogies:</b><br>1. Like <i>conveyor belt</i><br>2. Like <i>roller coaster line</i><br>3. Like <i>pipe flowing water</i>"

"🌳 <b>Binary Trees</b>","<b>🍂 Emotional Hook:</b> Your company's org chart is a tree! CEO at root, managers as internal nodes, employees as leaves.<br><br><b>📖 Definition:</b> Hierarchical structure where each node has ≤ 2 children (left/right).<br><br><b>🔍 Special Types:</b><br>• <u>BST</u>: Left < Parent < Right<br>• <u>AVL</u>: Self-balancing BST<br>• <u>Heap</u>: Complete tree with heap property<br><br><b>🌍 Examples:</b><br>1. <i>Decision trees</i> (yes/no paths)<br>2. <i>File system</i> folders<br>3. <i>Chess game</i> moves<br><br><b>🔮 Analogies:</b><br>1. Like <i>family genealogy</i><br>2. Like <i>river tributaries</i><br>3. Like <i>company hierarchy</i>"

"🕸️ <b>Graphs</b>","<b>✈️ Emotional Hook:</b> Facebook's social network is a giant graph! You're a node, friendships are edges.<br><br><b>📖 Definition:</b> Collection of vertices (nodes) connected by edges, with optional direction/weight.<br><br><b>🔍 Types:</b><br>• <u>Directed</u> (one-way streets)<br>• <u>Undirected</u> (two-way)<br>• <u>Weighted</u> (with costs)<br><br><b>🌍 Examples:</b><br>1. <i>Airline routes</i><br>2. <i>Web pages</i> (links)<br>3. <i>Neural networks</i><br><br><b>🔮 Analogies:</b><br>1. Like <i>metro maps</i><br>2. Like <i>disease spread</i> network<br>3. Like <i>electric grid</i>"

"🔑 <b>Hash Tables</b>","<b>📦 Emotional Hook:</b> Your brain's memory works like hashing! 'Dog' concept instantly retrieves all dog memories.<br><br><b>📖 Definition:</b> Array-based structure using hash function to map keys to indices for O(1) average access.<br><br><b>⚔️ Collision Handling:</b><br>• <u>Chaining</u> (linked lists)<br>• <u>Open addressing</u> (find next slot)<br><br><b>🌍 Examples:</b><br>1. <i>Dictionary</i> (word → definition)<br>2. <i>DNS lookup</i> (URL → IP)<br>3. <i>Password storage</i><br><br><b>🔮 Analogies:</b><br>1. Like <i>mailroom sorting</i> (last name → bin)<br>2. Like <i>library Dewey system</i><br>3. Like <i>vending machine</i> (code → snack)"

"🏥 <b>Priority Queues</b>","<b>🚑 Emotional Hook:</b> Hospital ER triage is a priority queue! Heart attacks jump ahead of sprained ankles.<br><br><b>📖 Definition:</b> Special queue where elements have priority (implemented via heaps).<br><br><b>⚙️ Operations:</b> O(log n) insert/extract-max<br><br><b>🌍 Examples:</b><br>1. <i>OS task scheduling</i><br>2. <i>Emergency response</i><br>3. <i>VIP customer service</i><br><br><b>🔮 Analogies:</b><br>1. Like <i>airport security</i> (first class first)<br>2. Like <i>video game enemy targeting</i><br>3. Like <i>presidential motorcade</i>"

"🔍 <b>Binary Search</b>","<b>📖 Emotional Hook:</b> The '20 Questions' game uses binary search! Each question halves possibilities.<br><br><b>📖 Definition:</b> O(log n) search algorithm that repeatedly divides sorted array in half.<br><br><b>⚙️ Requirements:</b> Sorted data, random access<br><br><b>🌍 Examples:</b><br>1. <i>Phone book lookup</i><br>2. <i>Word dictionary</i><br>3. <i>Guess-the-number game</i><br><br><b>🔮 Analogies:</b><br>1. Like <i>finding a word in dictionary</i><br>2. Like <i>GPS narrowing location</i><br>3. Like <i>hot/cold game</i>"